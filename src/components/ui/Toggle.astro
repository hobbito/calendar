---
interface Props {
  name: string;
  id?: string;
  label?: string;
  checked?: boolean;
  disabled?: boolean;
  class?: string;
}

const {
  name,
  id = name,
  label,
  checked = false,
  disabled = false,
  class: className = "",
} = Astro.props;

const toggleClasses = [
  "relative inline-flex h-5 w-9 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors",
  "duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2",
  checked ? "bg-primary-600" : "bg-gray-200",
  disabled && "opacity-60 cursor-not-allowed",
  className,
]
  .filter(Boolean)
  .join(" ");

// Extract remaining props excluding those already destructured
const {
  name: _,
  id: __,
  label: ___,
  checked: ____,
  disabled: _____,
  class: ______,
  ...rest
} = Astro.props;
---

<label class="flex items-center">
  <input
    type="checkbox"
    id={id}
    name={name}
    checked={checked}
    disabled={disabled}
    class="sr-only"
    {...rest}
  />
  <span class={toggleClasses} aria-hidden="true">
    <span
      class={`pointer-events-none inline-block h-4 w-4 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${checked ? "translate-x-4" : "translate-x-0"}`}
    ></span>
  </span>
  {label && <span class="ml-2 text-sm text-gray-700">{label}</span>}
</label>
